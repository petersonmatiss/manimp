// <auto-generated />
using System;
using Manimp.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Manimp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250913160542_AddTier3SourcingSchema")]
    partial class AddTier3SourcingSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Manimp.Auth.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Manimp.Shared.Models.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("UploadedUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("DocumentId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Manimp.Shared.Models.MaterialType", b =>
                {
                    b.Property<int>("MaterialTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialTypeId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("MaterialTypeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MaterialTypes");
                });

            modelBuilder.Entity("Manimp.Shared.Models.PriceQuote", b =>
                {
                    b.Property<int>("PriceQuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceQuoteId"));

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("PriceRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("QuoteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuoteNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("PriceQuoteId");

                    b.HasIndex("QuoteDate");

                    b.HasIndex("QuoteNumber");

                    b.HasIndex("Status");

                    b.HasIndex("SupplierId");

                    b.HasIndex("PriceRequestId", "SupplierId");

                    b.ToTable("PriceQuotes");
                });

            modelBuilder.Entity("Manimp.Shared.Models.PriceRequest", b =>
                {
                    b.Property<int>("PriceRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceRequestId"));

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RequiredByDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("PriceRequestId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RequestDate");

                    b.HasIndex("RequestNumber")
                        .IsUnique();

                    b.HasIndex("Status");

                    b.HasIndex("SupplierId");

                    b.ToTable("PriceRequests");
                });

            modelBuilder.Entity("Manimp.Shared.Models.PriceRequestLine", b =>
                {
                    b.Property<int>("PriceRequestLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceRequestLineId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(10,3)");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PriceRequestId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SteelGradeId")
                        .HasColumnType("int");

                    b.HasKey("PriceRequestLineId");

                    b.HasIndex("MaterialTypeId");

                    b.HasIndex("ProfileTypeId");

                    b.HasIndex("SteelGradeId");

                    b.HasIndex("PriceRequestId", "LineNumber")
                        .IsUnique();

                    b.ToTable("PriceRequestLines");
                });

            modelBuilder.Entity("Manimp.Shared.Models.ProfileInventory", b =>
                {
                    b.Property<int>("ProfileInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileInventoryId"));

                    b.Property<int?>("CertificateDocumentId")
                        .HasColumnType("int");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LotNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("OriginalPieces")
                        .HasColumnType("int");

                    b.Property<string>("PONumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PiecesOnHand")
                        .HasColumnType("int");

                    b.Property<int>("ProfileTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SteelGradeId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("WeightPerPiece")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ProfileInventoryId");

                    b.HasIndex("CertificateDocumentId");

                    b.HasIndex("Location");

                    b.HasIndex("LotNumber");

                    b.HasIndex("ProfileTypeId");

                    b.HasIndex("ReceivedDate");

                    b.HasIndex("SteelGradeId");

                    b.HasIndex("ProjectId", "ReceivedDate");

                    b.HasIndex("PurchaseOrderId", "ReceivedDate");

                    b.HasIndex("SupplierId", "ReceivedDate");

                    b.HasIndex("MaterialTypeId", "ProfileTypeId", "SteelGradeId");

                    b.ToTable("ProfileInventories");
                });

            modelBuilder.Entity("Manimp.Shared.Models.ProfileRemnantInventory", b =>
                {
                    b.Property<int>("ProfileRemnantInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileRemnantInventoryId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("OriginalProfileInventoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileUsageLogId")
                        .HasColumnType("int");

                    b.Property<decimal>("RemainingLength")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("RemnantLotNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RemnantPieces")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ProfileRemnantInventoryId");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("IsAvailable");

                    b.HasIndex("OriginalProfileInventoryId");

                    b.HasIndex("ProfileUsageLogId");

                    b.HasIndex("RemnantLotNumber")
                        .IsUnique();

                    b.ToTable("ProfileRemnantInventories");
                });

            modelBuilder.Entity("Manimp.Shared.Models.ProfileType", b =>
                {
                    b.Property<int>("ProfileTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileTypeId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ProfileTypeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProfileTypes");
                });

            modelBuilder.Entity("Manimp.Shared.Models.ProfileUsageLog", b =>
                {
                    b.Property<int>("ProfileUsageLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileUsageLogId"));

                    b.Property<decimal?>("LengthUsed")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("PiecesUsed")
                        .HasColumnType("int");

                    b.Property<int>("ProfileInventoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UsedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UsedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProfileUsageLogId");

                    b.HasIndex("ProfileInventoryId");

                    b.HasIndex("UsedBy");

                    b.HasIndex("UsedDate");

                    b.HasIndex("ProjectId", "UsedDate");

                    b.ToTable("ProfileUsageLogs");
                });

            modelBuilder.Entity("Manimp.Shared.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Manimp.Shared.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderId"));

                    b.Property<DateTime?>("ActualDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("PurchaseOrderId");

                    b.HasIndex("OrderDate");

                    b.HasIndex("PONumber")
                        .IsUnique();

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("Manimp.Shared.Models.PurchaseOrderLine", b =>
                {
                    b.Property<int>("PurchaseOrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderLineId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(10,3)");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("LineTotal")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PriceRequestLineId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SteelGradeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PurchaseOrderLineId");

                    b.HasIndex("MaterialTypeId");

                    b.HasIndex("PriceRequestLineId");

                    b.HasIndex("ProfileTypeId");

                    b.HasIndex("SteelGradeId");

                    b.HasIndex("PurchaseOrderId", "LineNumber")
                        .IsUnique();

                    b.ToTable("PurchaseOrderLines");
                });

            modelBuilder.Entity("Manimp.Shared.Models.SteelGrade", b =>
                {
                    b.Property<int>("SteelGradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SteelGradeId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("SteelGradeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SteelGrades");
                });

            modelBuilder.Entity("Manimp.Shared.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("ContactInfo")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Manimp.Shared.Models.PriceQuote", b =>
                {
                    b.HasOne("Manimp.Shared.Models.PriceRequest", "PriceRequest")
                        .WithMany("PriceQuotes")
                        .HasForeignKey("PriceRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manimp.Shared.Models.Supplier", "Supplier")
                        .WithMany("PriceQuotes")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PriceRequest");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Manimp.Shared.Models.PriceRequest", b =>
                {
                    b.HasOne("Manimp.Shared.Models.Project", "Project")
                        .WithMany("PriceRequests")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Manimp.Shared.Models.Supplier", "Supplier")
                        .WithMany("PriceRequests")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Project");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Manimp.Shared.Models.PriceRequestLine", b =>
                {
                    b.HasOne("Manimp.Shared.Models.MaterialType", "MaterialType")
                        .WithMany("PriceRequestLines")
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Manimp.Shared.Models.PriceRequest", "PriceRequest")
                        .WithMany("PriceRequestLines")
                        .HasForeignKey("PriceRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manimp.Shared.Models.ProfileType", "ProfileType")
                        .WithMany("PriceRequestLines")
                        .HasForeignKey("ProfileTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Manimp.Shared.Models.SteelGrade", "SteelGrade")
                        .WithMany("PriceRequestLines")
                        .HasForeignKey("SteelGradeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MaterialType");

                    b.Navigation("PriceRequest");

                    b.Navigation("ProfileType");

                    b.Navigation("SteelGrade");
                });

            modelBuilder.Entity("Manimp.Shared.Models.ProfileInventory", b =>
                {
                    b.HasOne("Manimp.Shared.Models.Document", "CertificateDocument")
                        .WithMany("ProfileInventories")
                        .HasForeignKey("CertificateDocumentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Manimp.Shared.Models.MaterialType", "MaterialType")
                        .WithMany("ProfileInventories")
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Manimp.Shared.Models.ProfileType", "ProfileType")
                        .WithMany("ProfileInventories")
                        .HasForeignKey("ProfileTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Manimp.Shared.Models.Project", "Project")
                        .WithMany("ProfileInventories")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Manimp.Shared.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("ProfileInventories")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Manimp.Shared.Models.SteelGrade", "SteelGrade")
                        .WithMany("ProfileInventories")
                        .HasForeignKey("SteelGradeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Manimp.Shared.Models.Supplier", "Supplier")
                        .WithMany("ProfileInventories")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CertificateDocument");

                    b.Navigation("MaterialType");

                    b.Navigation("ProfileType");

                    b.Navigation("Project");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("SteelGrade");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Manimp.Shared.Models.ProfileRemnantInventory", b =>
                {
                    b.HasOne("Manimp.Shared.Models.ProfileInventory", "OriginalProfileInventory")
                        .WithMany("ProfileRemnantInventories")
                        .HasForeignKey("OriginalProfileInventoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Manimp.Shared.Models.ProfileUsageLog", "ProfileUsageLog")
                        .WithMany("ProfileRemnantInventories")
                        .HasForeignKey("ProfileUsageLogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OriginalProfileInventory");

                    b.Navigation("ProfileUsageLog");
                });

            modelBuilder.Entity("Manimp.Shared.Models.ProfileUsageLog", b =>
                {
                    b.HasOne("Manimp.Shared.Models.ProfileInventory", "ProfileInventory")
                        .WithMany("ProfileUsageLogs")
                        .HasForeignKey("ProfileInventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manimp.Shared.Models.Project", "Project")
                        .WithMany("ProfileUsageLogs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ProfileInventory");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Manimp.Shared.Models.PurchaseOrder", b =>
                {
                    b.HasOne("Manimp.Shared.Models.Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Manimp.Shared.Models.PurchaseOrderLine", b =>
                {
                    b.HasOne("Manimp.Shared.Models.MaterialType", "MaterialType")
                        .WithMany("PurchaseOrderLines")
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Manimp.Shared.Models.PriceRequestLine", "PriceRequestLine")
                        .WithMany("PurchaseOrderLines")
                        .HasForeignKey("PriceRequestLineId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Manimp.Shared.Models.ProfileType", "ProfileType")
                        .WithMany("PurchaseOrderLines")
                        .HasForeignKey("ProfileTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Manimp.Shared.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderLines")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manimp.Shared.Models.SteelGrade", "SteelGrade")
                        .WithMany("PurchaseOrderLines")
                        .HasForeignKey("SteelGradeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MaterialType");

                    b.Navigation("PriceRequestLine");

                    b.Navigation("ProfileType");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("SteelGrade");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Manimp.Auth.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Manimp.Auth.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manimp.Auth.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Manimp.Auth.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Manimp.Shared.Models.Document", b =>
                {
                    b.Navigation("ProfileInventories");
                });

            modelBuilder.Entity("Manimp.Shared.Models.MaterialType", b =>
                {
                    b.Navigation("PriceRequestLines");

                    b.Navigation("ProfileInventories");

                    b.Navigation("PurchaseOrderLines");
                });

            modelBuilder.Entity("Manimp.Shared.Models.PriceRequest", b =>
                {
                    b.Navigation("PriceQuotes");

                    b.Navigation("PriceRequestLines");
                });

            modelBuilder.Entity("Manimp.Shared.Models.PriceRequestLine", b =>
                {
                    b.Navigation("PurchaseOrderLines");
                });

            modelBuilder.Entity("Manimp.Shared.Models.ProfileInventory", b =>
                {
                    b.Navigation("ProfileRemnantInventories");

                    b.Navigation("ProfileUsageLogs");
                });

            modelBuilder.Entity("Manimp.Shared.Models.ProfileType", b =>
                {
                    b.Navigation("PriceRequestLines");

                    b.Navigation("ProfileInventories");

                    b.Navigation("PurchaseOrderLines");
                });

            modelBuilder.Entity("Manimp.Shared.Models.ProfileUsageLog", b =>
                {
                    b.Navigation("ProfileRemnantInventories");
                });

            modelBuilder.Entity("Manimp.Shared.Models.Project", b =>
                {
                    b.Navigation("PriceRequests");

                    b.Navigation("ProfileInventories");

                    b.Navigation("ProfileUsageLogs");
                });

            modelBuilder.Entity("Manimp.Shared.Models.PurchaseOrder", b =>
                {
                    b.Navigation("ProfileInventories");

                    b.Navigation("PurchaseOrderLines");
                });

            modelBuilder.Entity("Manimp.Shared.Models.SteelGrade", b =>
                {
                    b.Navigation("PriceRequestLines");

                    b.Navigation("ProfileInventories");

                    b.Navigation("PurchaseOrderLines");
                });

            modelBuilder.Entity("Manimp.Shared.Models.Supplier", b =>
                {
                    b.Navigation("PriceQuotes");

                    b.Navigation("PriceRequests");

                    b.Navigation("ProfileInventories");

                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
